// Tanvi Nayak
// 9N

import java.io.*;
import java.net.*;
import java.util.*;
import java.util.ArrayList;
 
public class WordCount {
    public static void main(String[] args) throws IOException, MalformedURLException {
        URL url = new URL("http://basisphoenix.azurewebsites.net/wp-content/uploads/2014/11/battleship.txt");
        Scanner input = new Scanner(url.openStream());
        String txt = "";
        
        // create an ArrayList of type String to store the unique words
//-----> YOUR CODE HERE
        ArrayList <String> list =new ArrayList <String>();
        
        // create an ArrayList of type Integer to store the count of each time the unique word appears
//-----> YOUR CODE HERE
        ArrayList<Integer> listo= new ArrayList <Integer> (0);

        while(input.hasNextLine()) {
            // get the next line from the input file
            txt = input.nextLine();
            
            // print the original input
            System.out.println(txt);
            System.out.println();
            
            // call your method countUniqueWords
//-----> YOUR CODE HERE
            
            // print out number of unique words found, like: "Number of unique words: 23"
//-----> YOUR CODE HERE

            System.out.println();

            System.out.println("Count\tWord ");
            // for each word in your ArrayList of unique words, print the count followed by a tab and the word
//-----> YOUR CODE HERE

        }
        input.close();
    }
 
    // COMPLETE method countUniqueWords - use wordList to store the unique words in String input with a length > 3 and
    // wordCount to count the number of occurances of each unique word.
    //
    // Parameters:
    //    wordList - an ArrayList of type String to store a sorted list of unique words in the String input
    //    wordCount - an ArraltList of type Integer to store a list of the for each unique word in the String input
    //    input - String of text to be processed
    // Return Type: void
    public static void countUniqueWords(ArrayList<String> wordList, ArrayList<Integer> wordCount, String input) {
        Scanner getWords = new Scanner(input).useDelimiter("[\\W]");
        int index = 0;
        String word = "";
        
        // while getWords has more text
        //    get next word as lower case
        //        if length of word > 3 characters
        //            if wordList contains the word
        //                get index of the word in the ArrayList
        //                increment the word count at the same index in ArrayList wordCount
        //             else
        //                add word and count of 1 to wordList and wordCount, respectively
        //
//-----> YOUR CODE HERE
        int x=0;
        while(getWords.hasNext())
        {
          input.toLowerCase(getWords);
          if(input.length()>3)
          {
            if(wordList.contains(word))
            {
              x=wordList.indexOf(word);
              wordCount(x)=wordCount(x)+1;
            }
            else
            {
              wordList.add(word);
              wordCount.add(1);
            }
          }
          
          
          
          
          getWords.close();
        }
        
    }
        // sort wordList alphabetically, don't forget you will need to swap the values of wordCount
        // anytime you swap values in wordList
//-----> YOUR CODE HERE
        public static void sortArray(ArrayList<String> list)
        {
          int i=0;
          while(i<s.size()-1)
          {
            if(s<i>.compareTo(s<i+1>)>0)
            {
              String temp=s<i>;
              s<i>=s<i+1>;
              s<i+1>=temp;
              i=0;
            }
            else
            {
              i++;
            }
          }
        }
        
    }
}
